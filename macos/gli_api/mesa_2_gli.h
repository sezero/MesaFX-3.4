/* This file was generated by the convert_api_to_gli script do not modify! */
#include "gl.h"
#include "gliDispatch.h"
void FillExtDispatchTable(GLIExtensionDispatch* inDT)
{
inDT->blend_color_EXT=mglBlendColorEXT;
inDT->blend_equation_EXT=mglBlendEquationEXT;
inDT->lock_arrays_EXT=mglLockArraysEXT;
inDT->unlock_arrays_EXT=mglUnlockArraysEXT;
inDT->client_active_texture_ARB=mglClientActiveTextureARB;
inDT->active_texture_ARB=mglActiveTextureARB;
inDT->multi_tex_coord1d_ARB=mglMultiTexCoord1dARB;
inDT->multi_tex_coord1dv_ARB=mglMultiTexCoord1dvARB;
inDT->multi_tex_coord1f_ARB=mglMultiTexCoord1fARB;
inDT->multi_tex_coord1fv_ARB=mglMultiTexCoord1fvARB;
inDT->multi_tex_coord1i_ARB=mglMultiTexCoord1iARB;
inDT->multi_tex_coord1iv_ARB=mglMultiTexCoord1ivARB;
inDT->multi_tex_coord1s_ARB=mglMultiTexCoord1sARB;
inDT->multi_tex_coord1sv_ARB=mglMultiTexCoord1svARB;
inDT->multi_tex_coord2d_ARB=mglMultiTexCoord2dARB;
inDT->multi_tex_coord2dv_ARB=mglMultiTexCoord2dvARB;
inDT->multi_tex_coord2f_ARB=mglMultiTexCoord2fARB;
inDT->multi_tex_coord2fv_ARB=mglMultiTexCoord2fvARB;
inDT->multi_tex_coord2i_ARB=mglMultiTexCoord2iARB;
inDT->multi_tex_coord2iv_ARB=mglMultiTexCoord2ivARB;
inDT->multi_tex_coord2s_ARB=mglMultiTexCoord2sARB;
inDT->multi_tex_coord2sv_ARB=mglMultiTexCoord2svARB;
inDT->multi_tex_coord3d_ARB=mglMultiTexCoord3dARB;
inDT->multi_tex_coord3dv_ARB=mglMultiTexCoord3dvARB;
inDT->multi_tex_coord3f_ARB=mglMultiTexCoord3fARB;
inDT->multi_tex_coord3fv_ARB=mglMultiTexCoord3fvARB;
inDT->multi_tex_coord3i_ARB=mglMultiTexCoord3iARB;
inDT->multi_tex_coord3iv_ARB=mglMultiTexCoord3ivARB;
inDT->multi_tex_coord3s_ARB=mglMultiTexCoord3sARB;
inDT->multi_tex_coord3sv_ARB=mglMultiTexCoord3svARB;
inDT->multi_tex_coord4d_ARB=mglMultiTexCoord4dARB;
inDT->multi_tex_coord4dv_ARB=mglMultiTexCoord4dvARB;
inDT->multi_tex_coord4f_ARB=mglMultiTexCoord4fARB;
inDT->multi_tex_coord4fv_ARB=mglMultiTexCoord4fvARB;
inDT->multi_tex_coord4i_ARB=mglMultiTexCoord4iARB;
inDT->multi_tex_coord4iv_ARB=mglMultiTexCoord4ivARB;
inDT->multi_tex_coord4s_ARB=mglMultiTexCoord4sARB;
inDT->multi_tex_coord4sv_ARB=mglMultiTexCoord4svARB;
}
void FillDispatchTable(GLIFunctionDispatch* inDT)
{
inDT->accum=mglAccum;
inDT->alpha_func=mglAlphaFunc;
inDT->are_textures_resident=mglAreTexturesResident;
inDT->array_element=mglArrayElement;
inDT->begin=mglBegin;
inDT->bind_texture=mglBindTexture;
inDT->bitmap=mglBitmap;
inDT->blend_func=mglBlendFunc;
inDT->call_list=mglCallList;
inDT->call_lists=mglCallLists;
inDT->clear=mglClear;
inDT->clear_accum=mglClearAccum;
inDT->clear_color=mglClearColor;
inDT->clear_depth=mglClearDepth;
inDT->clear_index=mglClearIndex;
inDT->clear_stencil=mglClearStencil;
inDT->clip_plane=mglClipPlane;
inDT->color3b=mglColor3b;
inDT->color3bv=mglColor3bv;
inDT->color3d=mglColor3d;
inDT->color3dv=mglColor3dv;
inDT->color3f=mglColor3f;
inDT->color3fv=mglColor3fv;
inDT->color3i=mglColor3i;
inDT->color3iv=mglColor3iv;
inDT->color3s=mglColor3s;
inDT->color3sv=mglColor3sv;
inDT->color3ub=mglColor3ub;
inDT->color3ubv=mglColor3ubv;
inDT->color3ui=mglColor3ui;
inDT->color3uiv=mglColor3uiv;
inDT->color3us=mglColor3us;
inDT->color3usv=mglColor3usv;
inDT->color4b=mglColor4b;
inDT->color4bv=mglColor4bv;
inDT->color4d=mglColor4d;
inDT->color4dv=mglColor4dv;
inDT->color4f=mglColor4f;
inDT->color4fv=mglColor4fv;
inDT->color4i=mglColor4i;
inDT->color4iv=mglColor4iv;
inDT->color4s=mglColor4s;
inDT->color4sv=mglColor4sv;
inDT->color4ub=mglColor4ub;
inDT->color4ubv=mglColor4ubv;
inDT->color4ui=mglColor4ui;
inDT->color4uiv=mglColor4uiv;
inDT->color4us=mglColor4us;
inDT->color4usv=mglColor4usv;
inDT->color_mask=mglColorMask;
inDT->color_material=mglColorMaterial;
inDT->color_pointer=mglColorPointer;
inDT->copy_pixels=mglCopyPixels;
inDT->copy_tex_image1D=mglCopyTexImage1D;
inDT->copy_tex_image2D=mglCopyTexImage2D;
inDT->copy_tex_sub_image1D=mglCopyTexSubImage1D;
inDT->copy_tex_sub_image2D=mglCopyTexSubImage2D;
inDT->cull_face=mglCullFace;
inDT->delete_lists=mglDeleteLists;
inDT->delete_textures=mglDeleteTextures;
inDT->depth_func=mglDepthFunc;
inDT->depth_mask=mglDepthMask;
inDT->depth_range=mglDepthRange;
inDT->disable=mglDisable;
inDT->disable_client_state=mglDisableClientState;
inDT->draw_arrays=mglDrawArrays;
inDT->draw_buffer=mglDrawBuffer;
inDT->draw_elements=mglDrawElements;
inDT->draw_pixels=mglDrawPixels;
inDT->edge_flag=mglEdgeFlag;
inDT->edge_flag_pointer=mglEdgeFlagPointer;
inDT->edge_flagv=mglEdgeFlagv;
inDT->enable=mglEnable;
inDT->enable_client_state=mglEnableClientState;
inDT->end=mglEnd;
inDT->end_list=mglEndList;
inDT->eval_coord1d=mglEvalCoord1d;
inDT->eval_coord1dv=mglEvalCoord1dv;
inDT->eval_coord1f=mglEvalCoord1f;
inDT->eval_coord1fv=mglEvalCoord1fv;
inDT->eval_coord2d=mglEvalCoord2d;
inDT->eval_coord2dv=mglEvalCoord2dv;
inDT->eval_coord2f=mglEvalCoord2f;
inDT->eval_coord2fv=mglEvalCoord2fv;
inDT->eval_mesh1=mglEvalMesh1;
inDT->eval_mesh2=mglEvalMesh2;
inDT->eval_point1=mglEvalPoint1;
inDT->eval_point2=mglEvalPoint2;
inDT->feedback_buffer=mglFeedbackBuffer;
inDT->finish=mglFinish;
inDT->flush=mglFlush;
inDT->fogf=mglFogf;
inDT->fogfv=mglFogfv;
inDT->fogi=mglFogi;
inDT->fogiv=mglFogiv;
inDT->front_face=mglFrontFace;
inDT->frustum=mglFrustum;
inDT->gen_lists=mglGenLists;
inDT->gen_textures=mglGenTextures;
inDT->get_booleanv=mglGetBooleanv;
inDT->get_clip_plane=mglGetClipPlane;
inDT->get_doublev=mglGetDoublev;
inDT->get_error=mglGetError;
inDT->get_floatv=mglGetFloatv;
inDT->get_integerv=mglGetIntegerv;
inDT->get_lightfv=mglGetLightfv;
inDT->get_lightiv=mglGetLightiv;
inDT->get_mapdv=mglGetMapdv;
inDT->get_mapfv=mglGetMapfv;
inDT->get_mapiv=mglGetMapiv;
inDT->get_materialfv=mglGetMaterialfv;
inDT->get_materialiv=mglGetMaterialiv;
inDT->get_pixel_mapfv=mglGetPixelMapfv;
inDT->get_pixel_mapuiv=mglGetPixelMapuiv;
inDT->get_pixel_mapusv=mglGetPixelMapusv;
inDT->get_pointerv=mglGetPointerv;
inDT->get_polygon_stipple=mglGetPolygonStipple;
inDT->get_string=mglGetString;
inDT->get_tex_envfv=mglGetTexEnvfv;
inDT->get_tex_enviv=mglGetTexEnviv;
inDT->get_tex_gendv=mglGetTexGendv;
inDT->get_tex_genfv=mglGetTexGenfv;
inDT->get_tex_geniv=mglGetTexGeniv;
inDT->get_tex_image=mglGetTexImage;
inDT->get_tex_level_parameterfv=mglGetTexLevelParameterfv;
inDT->get_tex_level_parameteriv=mglGetTexLevelParameteriv;
inDT->get_tex_parameterfv=mglGetTexParameterfv;
inDT->get_tex_parameteriv=mglGetTexParameteriv;
inDT->hint=mglHint;
inDT->index_mask=mglIndexMask;
inDT->index_pointer=mglIndexPointer;
inDT->indexd=mglIndexd;
inDT->indexdv=mglIndexdv;
inDT->indexf=mglIndexf;
inDT->indexfv=mglIndexfv;
inDT->indexi=mglIndexi;
inDT->indexiv=mglIndexiv;
inDT->indexs=mglIndexs;
inDT->indexsv=mglIndexsv;
inDT->indexub=mglIndexub;
inDT->indexubv=mglIndexubv;
inDT->init_names=mglInitNames;
inDT->interleaved_arrays=mglInterleavedArrays;
inDT->is_enabled=mglIsEnabled;
inDT->is_list=mglIsList;
inDT->is_texture=mglIsTexture;
inDT->light_modelf=mglLightModelf;
inDT->light_modelfv=mglLightModelfv;
inDT->light_modeli=mglLightModeli;
inDT->light_modeliv=mglLightModeliv;
inDT->lightf=mglLightf;
inDT->lightfv=mglLightfv;
inDT->lighti=mglLighti;
inDT->lightiv=mglLightiv;
inDT->line_stipple=mglLineStipple;
inDT->line_width=mglLineWidth;
inDT->list_base=mglListBase;
inDT->load_identity=mglLoadIdentity;
inDT->load_matrixd=mglLoadMatrixd;
inDT->load_matrixf=mglLoadMatrixf;
inDT->load_name=mglLoadName;
inDT->logic_op=mglLogicOp;
inDT->map1d=mglMap1d;
inDT->map1f=mglMap1f;
inDT->map2d=mglMap2d;
inDT->map2f=mglMap2f;
inDT->map_grid1d=mglMapGrid1d;
inDT->map_grid1f=mglMapGrid1f;
inDT->map_grid2d=mglMapGrid2d;
inDT->map_grid2f=mglMapGrid2f;
inDT->materialf=mglMaterialf;
inDT->materialfv=mglMaterialfv;
inDT->materiali=mglMateriali;
inDT->materialiv=mglMaterialiv;
inDT->matrix_mode=mglMatrixMode;
inDT->mult_matrixd=mglMultMatrixd;
inDT->mult_matrixf=mglMultMatrixf;
inDT->new_list=mglNewList;
inDT->normal3b=mglNormal3b;
inDT->normal3bv=mglNormal3bv;
inDT->normal3d=mglNormal3d;
inDT->normal3dv=mglNormal3dv;
inDT->normal3f=mglNormal3f;
inDT->normal3fv=mglNormal3fv;
inDT->normal3i=mglNormal3i;
inDT->normal3iv=mglNormal3iv;
inDT->normal3s=mglNormal3s;
inDT->normal3sv=mglNormal3sv;
inDT->normal_pointer=mglNormalPointer;
inDT->ortho=mglOrtho;
inDT->pass_through=mglPassThrough;
inDT->pixel_mapfv=mglPixelMapfv;
inDT->pixel_mapuiv=mglPixelMapuiv;
inDT->pixel_mapusv=mglPixelMapusv;
inDT->pixel_storef=mglPixelStoref;
inDT->pixel_storei=mglPixelStorei;
inDT->pixel_transferf=mglPixelTransferf;
inDT->pixel_transferi=mglPixelTransferi;
inDT->pixel_zoom=mglPixelZoom;
inDT->point_size=mglPointSize;
inDT->polygon_mode=mglPolygonMode;
inDT->polygon_offset=mglPolygonOffset;
inDT->polygon_stipple=mglPolygonStipple;
inDT->pop_attrib=mglPopAttrib;
inDT->pop_client_attrib=mglPopClientAttrib;
inDT->pop_matrix=mglPopMatrix;
inDT->pop_name=mglPopName;
inDT->prioritize_textures=mglPrioritizeTextures;
inDT->push_attrib=mglPushAttrib;
inDT->push_client_attrib=mglPushClientAttrib;
inDT->push_matrix=mglPushMatrix;
inDT->push_name=mglPushName;
inDT->raster_pos2d=mglRasterPos2d;
inDT->raster_pos2dv=mglRasterPos2dv;
inDT->raster_pos2f=mglRasterPos2f;
inDT->raster_pos2fv=mglRasterPos2fv;
inDT->raster_pos2i=mglRasterPos2i;
inDT->raster_pos2iv=mglRasterPos2iv;
inDT->raster_pos2s=mglRasterPos2s;
inDT->raster_pos2sv=mglRasterPos2sv;
inDT->raster_pos3d=mglRasterPos3d;
inDT->raster_pos3dv=mglRasterPos3dv;
inDT->raster_pos3f=mglRasterPos3f;
inDT->raster_pos3fv=mglRasterPos3fv;
inDT->raster_pos3i=mglRasterPos3i;
inDT->raster_pos3iv=mglRasterPos3iv;
inDT->raster_pos3s=mglRasterPos3s;
inDT->raster_pos3sv=mglRasterPos3sv;
inDT->raster_pos4d=mglRasterPos4d;
inDT->raster_pos4dv=mglRasterPos4dv;
inDT->raster_pos4f=mglRasterPos4f;
inDT->raster_pos4fv=mglRasterPos4fv;
inDT->raster_pos4i=mglRasterPos4i;
inDT->raster_pos4iv=mglRasterPos4iv;
inDT->raster_pos4s=mglRasterPos4s;
inDT->raster_pos4sv=mglRasterPos4sv;
inDT->read_buffer=mglReadBuffer;
inDT->read_pixels=mglReadPixels;
inDT->rectd=mglRectd;
inDT->rectdv=mglRectdv;
inDT->rectf=mglRectf;
inDT->rectfv=mglRectfv;
inDT->recti=mglRecti;
inDT->rectiv=mglRectiv;
inDT->rects=mglRects;
inDT->rectsv=mglRectsv;
inDT->render_mode=mglRenderMode;
inDT->rotated=mglRotated;
inDT->rotatef=mglRotatef;
inDT->scaled=mglScaled;
inDT->scalef=mglScalef;
inDT->scissor=mglScissor;
inDT->select_buffer=mglSelectBuffer;
inDT->shade_model=mglShadeModel;
inDT->stencil_func=mglStencilFunc;
inDT->stencil_mask=mglStencilMask;
inDT->stencil_op=mglStencilOp;
inDT->tex_coord1d=mglTexCoord1d;
inDT->tex_coord1dv=mglTexCoord1dv;
inDT->tex_coord1f=mglTexCoord1f;
inDT->tex_coord1fv=mglTexCoord1fv;
inDT->tex_coord1i=mglTexCoord1i;
inDT->tex_coord1iv=mglTexCoord1iv;
inDT->tex_coord1s=mglTexCoord1s;
inDT->tex_coord1sv=mglTexCoord1sv;
inDT->tex_coord2d=mglTexCoord2d;
inDT->tex_coord2dv=mglTexCoord2dv;
inDT->tex_coord2f=mglTexCoord2f;
inDT->tex_coord2fv=mglTexCoord2fv;
inDT->tex_coord2i=mglTexCoord2i;
inDT->tex_coord2iv=mglTexCoord2iv;
inDT->tex_coord2s=mglTexCoord2s;
inDT->tex_coord2sv=mglTexCoord2sv;
inDT->tex_coord3d=mglTexCoord3d;
inDT->tex_coord3dv=mglTexCoord3dv;
inDT->tex_coord3f=mglTexCoord3f;
inDT->tex_coord3fv=mglTexCoord3fv;
inDT->tex_coord3i=mglTexCoord3i;
inDT->tex_coord3iv=mglTexCoord3iv;
inDT->tex_coord3s=mglTexCoord3s;
inDT->tex_coord3sv=mglTexCoord3sv;
inDT->tex_coord4d=mglTexCoord4d;
inDT->tex_coord4dv=mglTexCoord4dv;
inDT->tex_coord4f=mglTexCoord4f;
inDT->tex_coord4fv=mglTexCoord4fv;
inDT->tex_coord4i=mglTexCoord4i;
inDT->tex_coord4iv=mglTexCoord4iv;
inDT->tex_coord4s=mglTexCoord4s;
inDT->tex_coord4sv=mglTexCoord4sv;
inDT->tex_coord_pointer=mglTexCoordPointer;
inDT->tex_envf=mglTexEnvf;
inDT->tex_envfv=mglTexEnvfv;
inDT->tex_envi=mglTexEnvi;
inDT->tex_enviv=mglTexEnviv;
inDT->tex_gend=mglTexGend;
inDT->tex_gendv=mglTexGendv;
inDT->tex_genf=mglTexGenf;
inDT->tex_genfv=mglTexGenfv;
inDT->tex_geni=mglTexGeni;
inDT->tex_geniv=mglTexGeniv;
inDT->tex_image1D=mglTexImage1D;
inDT->tex_image2D=mglTexImage2D;
inDT->tex_parameterf=mglTexParameterf;
inDT->tex_parameterfv=mglTexParameterfv;
inDT->tex_parameteri=mglTexParameteri;
inDT->tex_parameteriv=mglTexParameteriv;
inDT->tex_sub_image1D=mglTexSubImage1D;
inDT->tex_sub_image2D=mglTexSubImage2D;
inDT->translated=mglTranslated;
inDT->translatef=mglTranslatef;
inDT->vertex2d=mglVertex2d;
inDT->vertex2dv=mglVertex2dv;
inDT->vertex2f=mglVertex2f;
inDT->vertex2fv=mglVertex2fv;
inDT->vertex2i=mglVertex2i;
inDT->vertex2iv=mglVertex2iv;
inDT->vertex2s=mglVertex2s;
inDT->vertex2sv=mglVertex2sv;
inDT->vertex3d=mglVertex3d;
inDT->vertex3dv=mglVertex3dv;
inDT->vertex3f=mglVertex3f;
inDT->vertex3fv=mglVertex3fv;
inDT->vertex3i=mglVertex3i;
inDT->vertex3iv=mglVertex3iv;
inDT->vertex3s=mglVertex3s;
inDT->vertex3sv=mglVertex3sv;
inDT->vertex4d=mglVertex4d;
inDT->vertex4dv=mglVertex4dv;
inDT->vertex4f=mglVertex4f;
inDT->vertex4fv=mglVertex4fv;
inDT->vertex4i=mglVertex4i;
inDT->vertex4iv=mglVertex4iv;
inDT->vertex4s=mglVertex4s;
inDT->vertex4sv=mglVertex4sv;
inDT->vertex_pointer=mglVertexPointer;
inDT->viewport=mglViewport;
}
